# Generated by Django 5.2.1 on 2025-05-14 08:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.ImageField(upload_to='achievement_icons/')),
                ('points_reward', models.IntegerField(default=0)),
                ('is_tutor_achievement', models.BooleanField(default=False)),
                ('is_tutee_achievement', models.BooleanField(default=False)),
                ('required_sessions', models.IntegerField(default=0)),
                ('required_ratings', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('required_feedback_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
            },
        ),
        migrations.CreateModel(
            name='Leaderboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('period', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('semester', 'Semester'), ('all_time', 'All Time')], max_length=20)),
                ('leaderboard_type', models.CharField(choices=[('tutors', 'Tutors'), ('tutees', 'Tutees'), ('global', 'Global')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Leaderboard',
                'verbose_name_plural': 'Leaderboards',
            },
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('rank', models.IntegerField()),
                ('sessions_completed', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('achievements_count', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Leaderboard Entry',
                'verbose_name_plural': 'Leaderboard Entries',
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='RedeemedReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_spent', models.IntegerField()),
                ('redeemed_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('fulfilled', 'Fulfilled'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('fulfillment_date', models.DateTimeField(blank=True, null=True)),
                ('fulfillment_notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Redeemed Reward',
                'verbose_name_plural': 'Redeemed Rewards',
                'ordering': ['-redeemed_at'],
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='reward_images/')),
                ('point_cost', models.IntegerField()),
                ('is_digital', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('quantity_available', models.IntegerField(default=-1)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Reward',
                'verbose_name_plural': 'Rewards',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('is_credit', models.BooleanField(default=True)),
                ('transaction_type', models.CharField(choices=[('session_completed', 'Session Completed'), ('feedback_given', 'Feedback Given'), ('achievement_unlocked', 'Achievement Unlocked'), ('reward_redeemed', 'Reward Redeemed'), ('bonus', 'Bonus Points'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'User Achievement',
                'verbose_name_plural': 'User Achievements',
            },
        ),
        migrations.CreateModel(
            name='VirtualCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.IntegerField(default=0)),
                ('lifetime_earned', models.IntegerField(default=0)),
                ('lifetime_spent', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Virtual Currency',
                'verbose_name_plural': 'Virtual Currencies',
            },
        ),
    ]
